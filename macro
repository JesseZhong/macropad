#!/bin/env python3
from subprocess import CalledProcessError, Popen
from sys import argv, stderr, stdin, stdout

def help():
    print('Dude please.')
    exit()

if not argv or len(argv) < 2 or not argv[1]:
    help()

command = argv[1]

def run_script(
    script_text: str
):
    try:
        with Popen(
            script_text,
            shell=True,
            stdout=stdout,
            stdin=stdin,
            stderr=stderr
        ) as process:
            code = process.wait()
            if code:
                raise CalledProcessError(code, script_text)

            return True

    except CalledProcessError as e:
        print(e)
        return False

def run_module(
    module: str
):
    command = f'python3 -m {module}'
    command = f'. env/bin/activate; {command}; deactivate'
    return run_script(command)

def install():
    script = """
        # Activate the virtual environment.
        . env/bin/activate

        # Install packages for then environment.
        pip3 install -r requirements

        # Install the MacroPad helper library.
        circup install adafruit_macropad

        # Install the LED animation library.
        circup install adafruit_led_animation

        # Update existing bundles on the board.
        circup update

        # Bake the config.
        ./bake-config

        # Copy the code into the board.
        # This is assuming your board is mounted on /media/
        cp *.py components/*.py config.baked.json fonts/*.pcf /media/$(whoami)/CIRCUITPY/

        # Deactivate environment.
        deactivate
    """
    return run_script(script)


def test():
    return run_module('unittest discover -p test_*.py')

def bake():
    return run_module('configuration.bakery')

commands = {
    'install': install,
    'test': test,
    'bake': bake
}

if command in commands:
    commands[command]()